// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffServiceAPI.DbContexts;

#nullable disable

namespace StaffServiceDAL.Migrations
{
    [DbContext(typeof(StaffDatabaseContext))]
    partial class StaffDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StaffServiceDAL.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 12, 9, 26, 8, 77, DateTimeKind.Utc).AddTicks(1434),
                            Email = "jf@gmail.com",
                            Name = "Jana Filipovic",
                            Position = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 12, 9, 26, 8, 77, DateTimeKind.Utc).AddTicks(1439),
                            Email = "ev@gmail.com",
                            Name = "Ema Vuckovic",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 12, 9, 26, 8, 77, DateTimeKind.Utc).AddTicks(1440),
                            Email = "acim@gmail.com",
                            ManagerId = 2,
                            Name = "Adam Cimbaljevic",
                            Position = "Employee"
                        });
                });

            modelBuilder.Entity("StaffServiceDAL.Entities.Employee", b =>
                {
                    b.HasOne("StaffServiceDAL.Entities.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId");

                    b.Navigation("Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
